---
- name: Test connectivity
  hosts: all
  tasks:
    - name: Ping
      ansible.builtin.ping:

- name: Build and export image
  hosts: builder
  tasks:
    - name: Install kiwi
      ansible.builtin.dnf:
        name:
          - git
          - kiwi-cli
          - qemu-img
          - squashfs-tools
          - xorriso
        state: present
        update_cache: true
    - name: Clone repo
      ansible.builtin.git:
        repo: "{{ lookup('env', 'CI_REPOSITORY_URL') }}"
        dest: "/root/fdi-repo"
        version: "{{ lookup('env', 'CI_COMMIT_SHA') }}"
    - name: Clean build dir
      ansible.builtin.file:
        path: "/root/fdi-image"
        state: "absent"
    - name: Get Git tag if exists
      ansible.builtin.command:
        cmd: git -C /root/fdi-repo describe --exact-match --tags HEAD
      register: git_tag
      ignore_errors: true
    - name: Set FDI release to Git tag
      ansible.builtin.copy:
        content: "{{ git_tag.stdout_lines.0 }}"
        dest: /root/fdi-repo/ubuntu/x86_64/ubuntu-focal/root/usr/share/fdi/RELEASE
      when: git_tag.rc == 0
    - name: Get Git revision
      ansible.builtin.command:
        cmd: git -C /root/fdi-repo rev-parse --short HEAD
      register: git_revision
      ignore_errors: true
    - name: Set FDI version to Git revision
      ansible.builtin.copy:
        content: "{{ git_revision.stdout_lines.0 }}"
        dest: /root/fdi-repo/ubuntu/x86_64/ubuntu-focal/root/usr/share/fdi/VERSION
    - name: Build image
      ansible.builtin.command:
        cmd: kiwi-ng --debug system build --description ubuntu/x86_64/ubuntu-focal --target-dir /root/fdi-image
        chdir: "/root/fdi-repo"
    - name: Find image
      ansible.builtin.find:
        paths: "/root/fdi-image"
        patterns: "*.iso"
      register: files_to_copy
    - name: Fetch image
      ansible.builtin.fetch:
        src: "{{ item.path }}"
        dest: "./"
        flat: false
      with_items: "{{ files_to_copy.files }}"

- name: Publish to factory
  hosts: factory
  tasks:
    - name: Find image locally
      ansible.builtin.find:
        paths: "./"
        patterns: "*.iso"
        recurse: true
      delegate_to: localhost
      register: files_to_copy
    - name: Upload ISO
      ansible.builtin.copy:
        src: "./{{ item.path }}"
        dest: "/data/mirror/orcharhino/fdi/{{ lookup('env', 'CI_COMMIT_REF_SLUG') }}/"
      with_items: "{{ files_to_copy.files }}"
...
